{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nfunction useFormValidation() {\n  _s();\n  const [values, setValue] = useState({});\n  const [errors, setError] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [isInputValid, setIsInputValid] = useState({});\n  function handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    const validationMessage = event.target.validationMessage;\n    const valid = event.target.validity.valid;\n    const form = event.target.form; //воспринимает как 2 разных инпута = 2 разные форма - откладываю. \n\n    console.log(form);\n    setValue(oldValues => {\n      return {\n        ...oldValues,\n        [name]: value\n      };\n    });\n    setError(oldErrors => {\n      return {\n        ...oldErrors,\n        [name]: validationMessage\n      };\n    });\n    setIsValid(form.checkValidity());\n    setIsInputValid(oldIsInputValid => {\n      return {\n        ...oldIsInputValid,\n        [name]: valid\n      };\n    });\n  }\n  return {\n    values,\n    errors,\n    isValid,\n    isInputValid,\n    handleChange\n  };\n}\n_s(useFormValidation, \"p9CqnKXKBjguPmOP0mdVxZS6Yo0=\");\nexport default useFormValidation;","map":{"version":3,"names":["useState","useFormValidation","_s","values","setValue","errors","setError","isValid","setIsValid","isInputValid","setIsInputValid","handleChange","event","name","target","value","validationMessage","valid","validity","form","console","log","oldValues","oldErrors","checkValidity","oldIsInputValid"],"sources":["/Users/elizavetaburlakova/Desktop/dev/mesto-react/src/utils/useFormValidation.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction useFormValidation () {\n    const [values, setValue] = useState({})\n    const [errors, setError] = useState ({})\n    const [isValid, setIsValid] = useState(false)\n    const [isInputValid, setIsInputValid] = useState({})\n\n    \n\n    function handleChange (event) {\n        const name = event.target.name\n        const value = event.target.value\n        const validationMessage = event.target.validationMessage\n        const valid = event.target.validity.valid\n        const form = event.target.form  //воспринимает как 2 разных инпута = 2 разные форма - откладываю. \n\n        console.log(form)\n\n        setValue((oldValues) => {\n            return { ...oldValues, [name]: value}\n        })\n\n        setError((oldErrors) => {\n            return { ...oldErrors, [name]: validationMessage}\n        })\n\n        setIsValid(form.checkValidity())\n\n        setIsInputValid((oldIsInputValid) => {\n            return { ...oldIsInputValid, [name]: valid}\n        })\n\n    }\n \n\n    return { values, errors, isValid, isInputValid, handleChange }\n\n}\n\nexport default useFormValidation"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,iBAAiBA,CAAA,EAAI;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACK,MAAM,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAIpD,SAASW,YAAYA,CAAEC,KAAK,EAAE;IAC1B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,MAAME,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;IAChC,MAAMC,iBAAiB,GAAGJ,KAAK,CAACE,MAAM,CAACE,iBAAiB;IACxD,MAAMC,KAAK,GAAGL,KAAK,CAACE,MAAM,CAACI,QAAQ,CAACD,KAAK;IACzC,MAAME,IAAI,GAAGP,KAAK,CAACE,MAAM,CAACK,IAAI,EAAE;;IAEhCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjBf,QAAQ,CAAEkB,SAAS,IAAK;MACpB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACT,IAAI,GAAGE;MAAK,CAAC;IACzC,CAAC,CAAC;IAEFT,QAAQ,CAAEiB,SAAS,IAAK;MACpB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACV,IAAI,GAAGG;MAAiB,CAAC;IACrD,CAAC,CAAC;IAEFR,UAAU,CAACW,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;IAEhCd,eAAe,CAAEe,eAAe,IAAK;MACjC,OAAO;QAAE,GAAGA,eAAe;QAAE,CAACZ,IAAI,GAAGI;MAAK,CAAC;IAC/C,CAAC,CAAC;EAEN;EAGA,OAAO;IAAEd,MAAM;IAAEE,MAAM;IAAEE,OAAO;IAAEE,YAAY;IAAEE;EAAa,CAAC;AAElE;AAACT,EAAA,CApCQD,iBAAiB;AAsC1B,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}