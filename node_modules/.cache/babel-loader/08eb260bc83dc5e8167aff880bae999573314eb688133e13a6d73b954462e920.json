{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaburlakova/Desktop/dev/react-mesto-auth1/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"./Header/Header.jsx\";\nimport Main from \"./Main/Main.jsx\";\nimport Footer from \"./Footer/Footer.jsx\";\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\nimport ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/api.js\";\nimport EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\nimport EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\nimport AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\nimport SendContext from \"../contexts/SendContext.js\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport InfoTooltip from \"../components/InfoTooltip.jsx\";\nimport ProtectedRoute from \"../components/ProtectedRoute.jsx\";\nimport { getUserData } from \"../utils/auth.js\";\nimport { authorization } from \"../utils/auth.js\";\nimport { auth } from \"../utils/auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  // стейты попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImageCardChoose, setIsImageCardChoose] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n\n  // стейты контекста\n  const [currentUser, setCurrentUser] = useState({}); //пустой объект\n  const [dataUser, setDataUser] = useState(\"\");\n\n  // стейты карточки\n  const [userCards, setUserCards] = useState([]);\n  const [deleteCardId, setDeleteCardId] = useState(\"\");\n\n  //стейты регистрации и логина\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  //переменная состояния попапов\n  const isOpen = isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isDeletePlacePopupOpen || isImageCardChoose || isSuccessful || isError;\n  const setCloseAllPopups = useCallback(() => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImageCardChoose(false);\n    setSelectedCard(null);\n    setIsDeletePlacePopupOpen(false);\n    setIsSuccessful(false);\n    setIsError(false);\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setUserCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }, error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n\n  // function setEventListenerForEsc() {\n  //   document.addEventListener('keydown', closePopupByEsc)\n  // }\n\n  // const closePopupByEsc = useCallback((event) => { // для закрытия по Esc\n  //   if (event.key === \"Escape\") {\n  //     setCloseAllPopups()\n  //     document.removeEventListener('keydown', closePopupByEsc)\n  //   }\n  // }, [setCloseAllPopups])\n\n  useEffect(() => {\n    //ready\n    const closePopupByEsc = event => {\n      if (event.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n    document.addEventListener(\"keydown\", closePopupByEsc);\n    return () => document.removeEventListener(\"keydown\", closePopupByEsc);\n  }, [isEditProfilePopupOpen, isEditAvatarPopupOpen, isAddPlacePopupOpen, isImageCardChoose, selectedCard, isDeletePlacePopupOpen, isDeletePlacePopupOpen]);\n  const closePopupByOverlay = useCallback(\n  //ready\n  event => {\n    // для закрытия по Overlay\n    if (event.target === event.currentTarget) {\n      setCloseAllPopups();\n    }\n  }, [isEditProfilePopupOpen, isEditAvatarPopupOpen, isAddPlacePopupOpen, isImageCardChoose, selectedCard, isDeletePlacePopupOpen, isDeletePlacePopupOpen]);\n  const closeAllPopups = useCallback(() => {\n    //ready\n    // для закрытия по Esc, Overlay и крестику\n    setCloseAllPopups();\n  }, [setCloseAllPopups, closePopupByOverlay]); //, closePopupByEsc\n\n  useEffect(() => {\n    //ready\n    if (localStorage.jwt) {\n      getUserData(localStorage.jwt).then(res => {\n        setDataUser(res.data.email);\n        setLoggedIn(true);\n        navigate(\"/\");\n      }).catch(err => console.log(`Ошибка: ${error}`));\n    }\n  }, [navigate]);\n  function handleEditAvatarClick() {\n    //для попапа аватара\n    setIsEditAvatarPopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleEditProfileClick() {\n    //для попапа с редактированием профиля\n    setIsEditProfilePopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleAddPlaceClick() {\n    // для попапа с добавлением новой карточки\n    setIsAddPlacePopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleDeletePlaceClick(cardId) {\n    //для попапа с удалением карточки\n    setIsDeletePlacePopupOpen(true);\n    //setEventListenerForEsc()\n    setDeleteCardId(cardId);\n  }\n  function handleImageCard(card) {\n    //для попапа с картинкой карточки\n    setSelectedCard(card);\n    setIsImageCardChoose(card);\n    //setEventListenerForEsc()\n  }\n\n  //запросы на сервер\n  useEffect(() => {\n    //ready\n    if (loggedIn) {\n      Promise.all([api.getInfo(), api.getCards()]).then(_ref => {\n        let [dataUser, dataCards] = _ref;\n        setCurrentUser(dataUser);\n        setUserCards(dataCards);\n      }).catch(error => {\n        console.log(`Ошибка: ${error}`);\n      });\n    }\n  }, [loggedIn]);\n  function handleDeletePlaceSubmit(event) {\n    //onSubmit\n    event.preventDefault();\n    api.deleteCard(deleteCardId).then(() => {\n      setUserCards(userCards.filter(userCards => {\n        return userCards._id !== deleteCardId; //карточку оставляем если не равны\n      }));\n\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleUpdateUser(dataUser, reset) {\n    api.setUserInfo(dataUser).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      reset();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleUpdateAvatar(dataUser, reset) {\n    api.setUserAvatar(dataUser).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      reset();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleAddPlaceSubmit(dataCards, reset) {\n    api.addCard(dataCards).then(res => {\n      setUserCards([res, ...userCards]);\n      closeAllPopups();\n      reset();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleLogin(password, email) {\n    authorization(password, email).then(res => {\n      localStorage.setItem('jwt', res.token);\n      setLoggedIn(true);\n      navigate('/');\n    }).catch(err => {\n      setIsError(true);\n      console.error(`Ошибкак при авторизации ${err}`);\n    }).finally(() => setIsSend(false));\n  }\n  function handleRegister(password, email) {\n    auth(password, email).then(res => {\n      setIsSuccessful(true);\n      navigate('/sign-in');\n    }).catch(err => {\n      setIsError(true);\n      console.error(`Ошибкак при регистрации ${err}`);\n    }).finally(() => setIsSend(false));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(SendContext.Provider, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onTrashButton: handleDeletePlaceClick,\n        onImageCard: handleImageCard,\n        cards: userCards,\n        onCardLike: handleCardLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup //popup for data profile editing\n      , {\n        open: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        open: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        open: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm //popup for a place card deleting\n      , {\n        name: \"popup_type_delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formButton: \"\\u0414\\u0430\",\n        open: isDeletePlacePopupOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleDeletePlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup //popup for a full size image by click\n      , {\n        name: \"popup_type_image\",\n        open: selectedCard,\n        card: isImageCardChoose,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8HSYti0jEMcxGn4Kt4DCovSqByQ=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\n\n// return (\n//   <CurrentUserContext.Provider value={currentUser}>\n//     <div className=\"page__container\">\n\n//       <SendContext.Provider value={isSend}>\n//         <Routes>\n//           <Route path='/' element={<ProtectedRoute\n//             dataUser={dataUser}\n//             openCard={handleAddPlaceClick}\n//             openProfile={handleEditProfileClick}\n//             openAvatar={handleEditAvatarClick}\n//             openDelete={handleDeletePopupClick}\n//             onCardClick={handleCardClick}\n//             onCardLike={handleLike}\n//             cards={cards}\n//             isLoading={isLoadingCards}\n//             loggedIn={loggedIn} />\n//           } />\n//           <Route path='/sign-up' element={\n//             <>\n//               <Header name='signup' />\n//               <Main name='signup' handleRegister={handleRegister} />\n//             </>\n//           } />\n//           <Route path='/sign-in' element={\n//             <>\n//               <Header name='signin' />\n//               <Main name='signin' handleLogin={handleLogin} />\n//             </>\n//           } />\n//           <Route path='*' element={<Navigate to='/' />} />\n//         </Routes>\n//       </SendContext.Provider>\n\n//       <Footer />\n\n//       <SendContext.Provider value={isSend}>\n//         <EditAvatarPopup\n//           onUpdateAvatar={handleUpdateAvatar}\n//           isOpen={isEditAvatarPopupOpen}\n//           onClose={closeAllPopups}\n//         />\n\n//         <EditProfilePopup\n//           onUpdateUser={handleUpdateUser}\n//           isOpen={isEditProfilePopupOpen}\n//           onClose={closeAllPopups}\n//         />\n\n//         <AddPlacePopup\n//           onAddCard={handleAddCard}\n//           isOpen={isAddPlacePopupOpen}\n//           onClose={closeAllPopups}\n//         />\n\n//         <DeletePopup\n//           isOpen={isDeletePopupOpen}\n//           onClose={closeAllPopups}\n//           onSubmit={handleDeleteSubmit}\n//         />\n//       </SendContext.Provider>\n\n//       <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups} />\n\n//       <InfoTooltip\n//         name='successful'\n//         titleText={'Вы успешно зарегистрировались!'}\n//         isOpen={isSuccessful}\n//         onClose={closeAllPopups}\n//       />\n\n//       <InfoTooltip\n//         name='error'\n//         titleText={'Что-то пошло не так! Попробуйте ещё раз.'}\n//         isOpen={isError}\n//         onClose={closeAllPopups}\n//       />\n\n//     </div>\n//   </CurrentUserContext.Provider>\n// );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","ImagePopup","useCallback","useEffect","useState","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","SendContext","Navigate","Route","Routes","useNavigate","InfoTooltip","ProtectedRoute","getUserData","authorization","auth","jsxDEV","_jsxDEV","App","_s","navigate","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImageCardChoose","setIsImageCardChoose","selectedCard","setSelectedCard","isDeletePlacePopupOpen","setIsDeletePlacePopupOpen","currentUser","setCurrentUser","dataUser","setDataUser","userCards","setUserCards","deleteCardId","setDeleteCardId","isSuccessful","setIsSuccessful","isError","setIsError","loggedIn","setLoggedIn","isOpen","setCloseAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","error","console","log","closePopupByEsc","event","key","closeAllPopups","document","addEventListener","removeEventListener","closePopupByOverlay","target","currentTarget","localStorage","jwt","res","data","email","catch","err","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeletePlaceClick","cardId","handleImageCard","Promise","all","getInfo","getCards","_ref","dataCards","handleDeletePlaceSubmit","preventDefault","deleteCard","filter","handleUpdateUser","reset","setUserInfo","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","addCard","handleLogin","password","setItem","token","finally","setIsSend","handleRegister","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onTrashButton","onImageCard","cards","onCardLike","open","onClose","onUpdateUser","onUpdateAvatar","name","title","formButton","onSubmit","_c","$RefreshReg$"],"sources":["/Users/elizavetaburlakova/Desktop/dev/react-mesto-auth1/src/components/App.jsx"],"sourcesContent":["import Header from \"./Header/Header.jsx\";\nimport Main from \"./Main/Main.jsx\";\nimport Footer from \"./Footer/Footer.jsx\";\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\nimport ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/api.js\";\nimport EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\nimport EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\nimport AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\nimport SendContext from \"../contexts/SendContext.js\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport InfoTooltip from \"../components/InfoTooltip.jsx\";\nimport ProtectedRoute from \"../components/ProtectedRoute.jsx\";\nimport { getUserData } from \"../utils/auth.js\";\nimport { authorization } from \"../utils/auth.js\";\nimport { auth } from \"../utils/auth.js\";\n\nfunction App() {\n  const navigate = useNavigate();\n  // стейты попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImageCardChoose, setIsImageCardChoose] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n\n  // стейты контекста\n  const [currentUser, setCurrentUser] = useState({}); //пустой объект\n  const [dataUser, setDataUser] = useState(\"\");\n\n  // стейты карточки\n  const [userCards, setUserCards] = useState([]);\n  const [deleteCardId, setDeleteCardId] = useState(\"\");\n\n  //стейты регистрации и логина\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  //переменная состояния попапов\n  const isOpen =\n    isEditProfilePopupOpen ||\n    isAddPlacePopupOpen ||\n    isEditAvatarPopupOpen ||\n    isDeletePlacePopupOpen ||\n    isImageCardChoose ||\n    isSuccessful ||\n    isError;\n\n  const setCloseAllPopups = useCallback(() => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImageCardChoose(false);\n    setSelectedCard(null);\n    setIsDeletePlacePopupOpen(false);\n    setIsSuccessful(false);\n    setIsError(false);\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(\n      (newCard) => {\n        setUserCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      },\n      (error) => {\n        console.log(`Ошибка: ${error}`);\n      }\n    );\n  }\n\n  // function setEventListenerForEsc() {\n  //   document.addEventListener('keydown', closePopupByEsc)\n  // }\n\n  // const closePopupByEsc = useCallback((event) => { // для закрытия по Esc\n  //   if (event.key === \"Escape\") {\n  //     setCloseAllPopups()\n  //     document.removeEventListener('keydown', closePopupByEsc)\n  //   }\n  // }, [setCloseAllPopups])\n\n  useEffect(() => {              //ready\n    const closePopupByEsc = (event) => {\n      if (event.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n    document.addEventListener(\"keydown\", closePopupByEsc);\n    return () => document.removeEventListener(\"keydown\", closePopupByEsc);\n  }, [\n    isEditProfilePopupOpen,\n    isEditAvatarPopupOpen,\n    isAddPlacePopupOpen,\n    isImageCardChoose,\n    selectedCard,\n    isDeletePlacePopupOpen,\n    isDeletePlacePopupOpen,\n  ]);\n\n  const closePopupByOverlay = useCallback(               //ready\n    (event) => {\n      // для закрытия по Overlay\n      if (event.target === event.currentTarget) {\n        setCloseAllPopups();\n      }\n    },\n    [\n      isEditProfilePopupOpen,\n      isEditAvatarPopupOpen,\n      isAddPlacePopupOpen,\n      isImageCardChoose,\n      selectedCard,\n      isDeletePlacePopupOpen,\n      isDeletePlacePopupOpen,\n    ]\n  );\n\n  const closeAllPopups = useCallback(() => {               //ready\n    // для закрытия по Esc, Overlay и крестику\n    setCloseAllPopups();\n  }, [setCloseAllPopups, closePopupByOverlay]); //, closePopupByEsc\n\n  useEffect(() => {               //ready\n    if (localStorage.jwt) {\n      getUserData(localStorage.jwt)\n        .then((res) => {\n          setDataUser(res.data.email);\n          setLoggedIn(true);\n          navigate(\"/\");\n        })\n        .catch((err) => console.log(`Ошибка: ${error}`));\n    }\n  }, [navigate]);\n\n\n\n  function handleEditAvatarClick() {\n    //для попапа аватара\n    setIsEditAvatarPopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleEditProfileClick() {\n    //для попапа с редактированием профиля\n    setIsEditProfilePopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleAddPlaceClick() {\n    // для попапа с добавлением новой карточки\n    setIsAddPlacePopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleDeletePlaceClick(cardId) {\n    //для попапа с удалением карточки\n    setIsDeletePlacePopupOpen(true);\n    //setEventListenerForEsc()\n    setDeleteCardId(cardId);\n  }\n\n  function handleImageCard(card) {\n    //для попапа с картинкой карточки\n    setSelectedCard(card);\n    setIsImageCardChoose(card);\n    //setEventListenerForEsc()\n  }\n\n  //запросы на сервер\n  useEffect(() => {               //ready\n    if (loggedIn) {\n      Promise.all([api.getInfo(), api.getCards()])\n      .then(([dataUser, dataCards]) => {\n        setCurrentUser(dataUser);\n        setUserCards(dataCards);\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      });\n    }\n  }, [loggedIn]);\n\n  function handleDeletePlaceSubmit(event) {\n    //onSubmit\n    event.preventDefault();\n    api\n      .deleteCard(deleteCardId)\n      .then(() => {\n        setUserCards(\n          userCards.filter((userCards) => {\n            return userCards._id !== deleteCardId; //карточку оставляем если не равны\n          })\n        );\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      });\n  }\n\n  function handleUpdateUser(dataUser, reset) {\n    api\n      .setUserInfo(dataUser)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n        reset();\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      });\n  }\n\n  function handleUpdateAvatar(dataUser, reset) {\n    api\n      .setUserAvatar(dataUser)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n        reset();\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      });\n  }\n\n  function handleAddPlaceSubmit(dataCards, reset) {\n    api\n      .addCard(dataCards)\n      .then((res) => {\n        setUserCards([res, ...userCards]);\n        closeAllPopups();\n        reset();\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      });\n  }\n\n  function handleLogin(password, email) {\n    authorization(password, email)\n      .then(res => {\n        localStorage.setItem('jwt', res.token)\n        setLoggedIn(true)\n        navigate('/')\n      })\n      .catch(err => {\n        setIsError(true)\n        console.error(`Ошибкак при авторизации ${err}`)\n      })\n      .finally(() => setIsSend(false))\n  }\n\n  function handleRegister(password, email) {\n    auth(password, email)\n      .then(res => {\n        setIsSuccessful(true)\n        navigate('/sign-in')\n      })\n      .catch((err) => {\n        setIsError(true)\n        console.error(`Ошибкак при регистрации ${err}`)\n      })\n      .finally(() => setIsSend(false))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <SendContext.Provider>\n          <Routes>\n            <Route></Route>\n          </Routes>\n        </SendContext.Provider>\n\n        <Header />\n\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onTrashButton={handleDeletePlaceClick}\n          onImageCard={handleImageCard}\n          cards={userCards}\n          onCardLike={handleCardLike}\n        />\n\n        <Footer />\n\n        <EditProfilePopup //popup for data profile editing\n          open={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          open={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          open={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <PopupWithForm //popup for a place card deleting\n          name=\"popup_type_delete\"\n          title=\"Вы уверены?\"\n          formButton=\"Да\"\n          open={isDeletePlacePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleDeletePlaceSubmit}\n        />\n\n        <ImagePopup //popup for a full size image by click\n          name=\"popup_type_image\"\n          open={selectedCard}\n          card={isImageCardChoose}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n// return (\n//   <CurrentUserContext.Provider value={currentUser}>\n//     <div className=\"page__container\">\n\n//       <SendContext.Provider value={isSend}>\n//         <Routes>\n//           <Route path='/' element={<ProtectedRoute\n//             dataUser={dataUser}\n//             openCard={handleAddPlaceClick}\n//             openProfile={handleEditProfileClick}\n//             openAvatar={handleEditAvatarClick}\n//             openDelete={handleDeletePopupClick}\n//             onCardClick={handleCardClick}\n//             onCardLike={handleLike}\n//             cards={cards}\n//             isLoading={isLoadingCards}\n//             loggedIn={loggedIn} />\n//           } />\n//           <Route path='/sign-up' element={\n//             <>\n//               <Header name='signup' />\n//               <Main name='signup' handleRegister={handleRegister} />\n//             </>\n//           } />\n//           <Route path='/sign-in' element={\n//             <>\n//               <Header name='signin' />\n//               <Main name='signin' handleLogin={handleLogin} />\n//             </>\n//           } />\n//           <Route path='*' element={<Navigate to='/' />} />\n//         </Routes>\n//       </SendContext.Provider>\n\n//       <Footer />\n\n//       <SendContext.Provider value={isSend}>\n//         <EditAvatarPopup\n//           onUpdateAvatar={handleUpdateAvatar}\n//           isOpen={isEditAvatarPopupOpen}\n//           onClose={closeAllPopups}\n//         />\n\n//         <EditProfilePopup\n//           onUpdateUser={handleUpdateUser}\n//           isOpen={isEditProfilePopupOpen}\n//           onClose={closeAllPopups}\n//         />\n\n//         <AddPlacePopup\n//           onAddCard={handleAddCard}\n//           isOpen={isAddPlacePopupOpen}\n//           onClose={closeAllPopups}\n//         />\n\n//         <DeletePopup\n//           isOpen={isDeletePopupOpen}\n//           onClose={closeAllPopups}\n//           onSubmit={handleDeleteSubmit}\n//         />\n//       </SendContext.Provider>\n\n//       <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups} />\n\n//       <InfoTooltip\n//         name='successful'\n//         titleText={'Вы успешно зарегистрировались!'}\n//         isOpen={isSuccessful}\n//         onClose={closeAllPopups}\n//       />\n\n//       <InfoTooltip\n//         name='error'\n//         titleText={'Что-то пошло не так! Попробуйте ещё раз.'}\n//         isOpen={isError}\n//         onClose={closeAllPopups}\n//       />\n\n//     </div>\n//   </CurrentUserContext.Provider>\n// );\n// }\n\n// export default App;"],"mappings":"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G,YAAa;QACnBqB,IAAI,EAAEvB,iBAAkB;QACxBqG,OAAO,EAAE5D;MAAe;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAElC;AAACpG,EAAA,CA1TQD,GAAG;EAAA,QACOR,WAAW;AAAA;AAAA6H,EAAA,GADrBrH,GAAG;AA4TZ,eAAeA,GAAG;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}