{"ast":null,"code":"import _classCallCheck from\"/Users/elizavetaburlakova/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/elizavetaburlakova/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;this._authorization=options.headers.authorization;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getInfo\",value:function getInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:this._authorization}}).then(this._checkResponse);}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:{authorization:this._authorization}}).then(this._checkResponse);}},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkResponse);}},{key:\"setUserAvatar\",value:function setUserAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){var method='DELETE';if(isLiked){method='PUT';}return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:method,headers:{authorization:this._authorization}}).then(this._checkResponse);}// addLike(cardId) {\n//     return fetch (`${this._url}/cards/${cardId}/likes`, {\n//         method: 'PUT',\n//         headers: {\n//             authorization: this._authorization,\n//         }\n//     })\n//     .then(this._checkResponse)\n// }\n// deleteLike(cardId) {\n//     return fetch (`${this._url}/cards/${cardId}/likes`, {  //альтернатива`-  ссылка\n//         method: 'DELETE',\n//         headers: {\n//             authorization: this._authorization,\n//         }\n//     })\n//     .then(this._checkResponse)\n// }\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{//альтернатива`-  ссылка\nmethod:\"DELETE\",headers:{authorization:this._authorization}}).then(this._checkResponse);}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-69\",headers:{authorization:\"ae20785e-e850-4452-960a-73f188fc9474\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","baseUrl","_headers","headers","_authorization","authorization","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getInfo","fetch","then","getCards","setUserInfo","data","method","body","JSON","stringify","name","about","setUserAvatar","avatar","addCard","link","changeLikeCardStatus","cardId","isLiked","deleteCard","api"],"sources":["/Users/elizavetaburlakova/Desktop/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n        this._authorization = options.headers.authorization;\n    }\n\n    _checkResponse(res) {\n        return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: {\n                authorization: this._authorization,\n            },\n        }).then(this._checkResponse);\n    }\n\n    getCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: {\n                authorization: this._authorization,\n            },\n        }).then(this._checkResponse);\n    }\n\n    setUserInfo(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about,\n            }),\n        }).then(this._checkResponse);\n    }\n\n    setUserAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar,\n            }),\n        }).then(this._checkResponse);\n    }\n\n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link,\n            }),\n        }).then(this._checkResponse);\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        let method = 'DELETE';\n\n        if (isLiked) {\n            method = 'PUT';\n        }\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: method,\n            headers: {\n                authorization: this._authorization,\n            }\n        }).then(this._checkResponse);\n    }\n\n    // addLike(cardId) {\n    //     return fetch (`${this._url}/cards/${cardId}/likes`, {\n    //         method: 'PUT',\n    //         headers: {\n    //             authorization: this._authorization,\n    //         }\n    //     })\n    //     .then(this._checkResponse)\n    // }\n\n    // deleteLike(cardId) {\n    //     return fetch (`${this._url}/cards/${cardId}/likes`, {  //альтернатива`-  ссылка\n    //         method: 'DELETE',\n    //         headers: {\n    //             authorization: this._authorization,\n    //         }\n    //     })\n    //     .then(this._checkResponse)\n    // }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            //альтернатива`-  ссылка\n            method: \"DELETE\",\n            headers: {\n                authorization: this._authorization,\n            },\n        }).then(this._checkResponse);\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-69\",\n    headers: {\n        authorization: \"ae20785e-e850-4452-960a-73f188fc9474\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}