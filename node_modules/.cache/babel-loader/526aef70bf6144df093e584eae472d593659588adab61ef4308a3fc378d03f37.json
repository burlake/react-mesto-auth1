{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaburlakova/Desktop/dev/react-mesto-auth1/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"./Header/Header.jsx\";\nimport Main from \"./Main/Main.jsx\";\nimport Footer from \"./Footer/Footer.jsx\";\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\nimport ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/api.js\";\nimport EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\nimport EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\nimport AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\nimport SendContext from \"../contexts/SendContext.js\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport InfoTooltip from \"../components/InfoTooltip.jsx\";\nimport ProtectedRoute from \"../components/ProtectedRoute.jsx\";\nimport { getUserData } from \"../utils/auth.js\";\nimport { authorization } from \"../utils/auth.js\";\nimport { auth } from \"../utils/auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  // стейты попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImageCardChoose, setIsImageCardChoose] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n\n  // стейты контекста\n  const [currentUser, setCurrentUser] = useState({}); //пустой объект\n  const [dataUser, setDataUser] = useState('');\n\n  // стейты карточки\n  const [userCards, setUserCards] = useState([]);\n  const [deleteCardId, setDeleteCardId] = useState('');\n\n  //стейты регистрации и логина\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  //переменная состояния попапов\n  const isOpen = isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isDeletePlacePopupOpen || isImageCardChoose || isSuccessful || isError;\n  const setCloseAllPopups = useCallback(() => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImageCardChoose(false);\n    setSelectedCard(null);\n    setIsDeletePlacePopupOpen(false);\n    setIsSuccessful(false);\n    setIsError(false);\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setUserCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }, error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  ;\n\n  // function setEventListenerForEsc() {\n  //   document.addEventListener('keydown', closePopupByEsc)\n  // }\n\n  // const closePopupByEsc = useCallback((event) => { // для закрытия по Esc\n  //   if (event.key === \"Escape\") {\n  //     setCloseAllPopups()\n  //     document.removeEventListener('keydown', closePopupByEsc)\n  //   }\n  // }, [setCloseAllPopups])\n\n  useEffect(() => {\n    const closePopupByEsc = event => {\n      if (event.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n    document.addEventListener(\"keydown\", closePopupByEsc);\n    return () => document.removeEventListener(\"keydown\", closePopupByEsc);\n  }, [isEditProfilePopupOpen, isEditAvatarPopupOpen, isAddPlacePopupOpen, isImageCardChoose, selectedCard, isDeletePlacePopupOpen, isDeletePlacePopupOpen]);\n  const closePopupByOverlay = useCallback(event => {\n    // для закрытия по Overlay\n    if (event.target === event.currentTarget) {\n      setCloseAllPopups();\n    }\n  }, [isEditProfilePopupOpen, isEditAvatarPopupOpen, isAddPlacePopupOpen, isImageCardChoose, selectedCard, isDeletePlacePopupOpen, isDeletePlacePopupOpen]);\n  const closeAllPopups = useCallback(() => {\n    // для закрытия по Esc, Overlay и крестику\n    setCloseAllPopups();\n  }, [setCloseAllPopups, closePopupByOverlay]); //, closePopupByEsc\n\n  function handleEditAvatarClick() {\n    //для попапа аватара\n    setIsEditAvatarPopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleEditProfileClick() {\n    //для попапа с редактированием профиля\n    setIsEditProfilePopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleAddPlaceClick() {\n    // для попапа с добавлением новой карточки\n    setIsAddPlacePopupOpen(true);\n    //setEventListenerForEsc()\n  }\n\n  function handleDeletePlaceClick(cardId) {\n    //для попапа с удалением карточки\n    setIsDeletePlacePopupOpen(true);\n    //setEventListenerForEsc()\n    setDeleteCardId(cardId);\n  }\n  function handleImageCard(card) {\n    //для попапа с картинкой карточки\n    setSelectedCard(card);\n    setIsImageCardChoose(card);\n    //setEventListenerForEsc()\n  }\n\n  //запросы на сервер\n  useEffect(() => {\n    Promise.all([api.getInfo(), api.getCards()]).then(_ref => {\n      let [dataUser, dataCards] = _ref;\n      setCurrentUser(dataUser);\n      setUserCards(dataCards);\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }, []);\n  function handleDeletePlaceSubmit(event) {\n    //onSubmit\n    event.preventDefault();\n    api.deleteCard(deleteCardId).then(() => {\n      setUserCards(userCards.filter(userCards => {\n        return userCards._id !== deleteCardId; //карточку оставляем если не равны\n      }));\n\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleUpdateUser(dataUser, reset) {\n    api.setUserInfo(dataUser).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      reset();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleUpdateAvatar(dataUser, reset) {\n    api.setUserAvatar(dataUser).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      reset();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleAddPlaceSubmit(dataCards, reset) {\n    api.addCard(dataCards).then(res => {\n      setUserCards([res, ...userCards]);\n      closeAllPopups();\n      reset();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(SendContext.Provider, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onTrashButton: handleDeletePlaceClick,\n        onImageCard: handleImageCard,\n        cards: userCards,\n        onCardLike: handleCardLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup //popup for data profile editing\n      , {\n        open: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        open: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        open: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm //popup for a place card deleting\n      , {\n        name: \"popup_type_delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formButton: \"\\u0414\\u0430\",\n        open: isDeletePlacePopupOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleDeletePlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup //popup for a full size image by click\n      , {\n        name: \"popup_type_image\",\n        open: selectedCard,\n        card: isImageCardChoose,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cbQSvUZLuekVzUgcUhvgXE+nzPk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","ImagePopup","useCallback","useEffect","useState","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","SendContext","Navigate","Route","Routes","useNavigate","InfoTooltip","ProtectedRoute","getUserData","authorization","auth","jsxDEV","_jsxDEV","App","_s","navigate","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImageCardChoose","setIsImageCardChoose","selectedCard","setSelectedCard","isDeletePlacePopupOpen","setIsDeletePlacePopupOpen","currentUser","setCurrentUser","dataUser","setDataUser","userCards","setUserCards","deleteCardId","setDeleteCardId","isSuccessful","setIsSuccessful","isError","setIsError","loggedIn","setLoggedIn","isOpen","setCloseAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","error","console","log","closePopupByEsc","event","key","closeAllPopups","document","addEventListener","removeEventListener","closePopupByOverlay","target","currentTarget","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeletePlaceClick","cardId","handleImageCard","Promise","all","getInfo","getCards","_ref","dataCards","catch","handleDeletePlaceSubmit","preventDefault","deleteCard","filter","handleUpdateUser","reset","setUserInfo","res","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","addCard","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onTrashButton","onImageCard","cards","onCardLike","open","onClose","onUpdateUser","onUpdateAvatar","name","title","formButton","onSubmit","_c","$RefreshReg$"],"sources":["/Users/elizavetaburlakova/Desktop/dev/react-mesto-auth1/src/components/App.jsx"],"sourcesContent":["import Header from \"./Header/Header.jsx\";\nimport Main from \"./Main/Main.jsx\";\nimport Footer from \"./Footer/Footer.jsx\";\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\nimport ImagePopup from \"./ImagePopup/ImagePopup.jsx\"\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/api.js\";\nimport EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\nimport EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\nimport AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\nimport SendContext from \"../contexts/SendContext.js\";\nimport { Navigate, Route, Routes, useNavigate  } from \"react-router-dom\";\nimport InfoTooltip from \"../components/InfoTooltip.jsx\";\nimport ProtectedRoute from \"../components/ProtectedRoute.jsx\";\nimport { getUserData } from \"../utils/auth.js\";\nimport { authorization } from \"../utils/auth.js\";\nimport { auth } from \"../utils/auth.js\";\n\nfunction App() {\n  const navigate = useNavigate()\n  // стейты попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImageCardChoose, setIsImageCardChoose] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n\n  // стейты контекста\n  const [currentUser, setCurrentUser] = useState({}) //пустой объект\n  const [dataUser, setDataUser] = useState('')\n\n  // стейты карточки\n  const [userCards, setUserCards] = useState([]);\n  const [deleteCardId, setDeleteCardId] = useState ('')\n\n    //стейты регистрации и логина\n    const [isSuccessful, setIsSuccessful] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const [loggedIn, setLoggedIn] = useState(false)\n    \n    //переменная состояния попапов\n    const isOpen = isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isDeletePlacePopupOpen || isImageCardChoose || isSuccessful || isError\n\n    \n  const setCloseAllPopups = useCallback(() => {\n    setIsEditAvatarPopupOpen(false)\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsImageCardChoose(false)\n    setSelectedCard(null)\n    setIsDeletePlacePopupOpen(false)\n    setIsSuccessful(false)\n    setIsError(false)\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setUserCards((state) => state.map((c) =>\n          c._id === card._id ? newCard : c))\n      },\n        (error) => {\n          console.log(`Ошибка: ${error}`);\n        })\n  };\n\n  // function setEventListenerForEsc() {\n  //   document.addEventListener('keydown', closePopupByEsc)\n  // }\n\n  // const closePopupByEsc = useCallback((event) => { // для закрытия по Esc\n  //   if (event.key === \"Escape\") {\n  //     setCloseAllPopups()\n  //     document.removeEventListener('keydown', closePopupByEsc)\n  //   }\n  // }, [setCloseAllPopups])\n\n  useEffect(() => {\n    const closePopupByEsc = (event) => {\n        if (event.key === \"Escape\") {\n            closeAllPopups();\n        }\n    };\n    document.addEventListener(\"keydown\", closePopupByEsc);\n    return () => document.removeEventListener(\"keydown\", closePopupByEsc);\n  }, [\n    isEditProfilePopupOpen, \n    isEditAvatarPopupOpen, \n    isAddPlacePopupOpen, \n    isImageCardChoose, \n    selectedCard, \n    isDeletePlacePopupOpen,\n    isDeletePlacePopupOpen]);\n\n  const closePopupByOverlay = useCallback((event) => { // для закрытия по Overlay\n    if (event.target === event.currentTarget) {\n      setCloseAllPopups()\n    }\n  }, [\n    isEditProfilePopupOpen, \n    isEditAvatarPopupOpen, \n    isAddPlacePopupOpen, \n    isImageCardChoose, \n    selectedCard, \n    isDeletePlacePopupOpen,\n    isDeletePlacePopupOpen\n  ])\n\n  const closeAllPopups = useCallback(() => {   // для закрытия по Esc, Overlay и крестику\n    setCloseAllPopups()\n  }, [setCloseAllPopups, closePopupByOverlay]) //, closePopupByEsc\n\n  function handleEditAvatarClick() { //для попапа аватара\n    setIsEditAvatarPopupOpen(true)\n    //setEventListenerForEsc()\n  }\n\n  function handleEditProfileClick() { //для попапа с редактированием профиля\n    setIsEditProfilePopupOpen(true)\n    //setEventListenerForEsc()\n  }\n\n  function handleAddPlaceClick() { // для попапа с добавлением новой карточки\n    setIsAddPlacePopupOpen(true)\n    //setEventListenerForEsc()\n  }\n\n  function handleDeletePlaceClick(cardId) { //для попапа с удалением карточки\n    setIsDeletePlacePopupOpen(true)\n    //setEventListenerForEsc()\n    setDeleteCardId(cardId)\n  }\n\n  function handleImageCard(card) { //для попапа с картинкой карточки\n    setSelectedCard(card)\n    setIsImageCardChoose(card) \n    //setEventListenerForEsc()\n  }\n\n  //запросы на сервер\n  useEffect(() => {\n    Promise.all([api.getInfo(), api.getCards()])\n      .then(([dataUser, dataCards]) => {\n        setCurrentUser(dataUser)\n        setUserCards(dataCards);\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      });\n  }, []);\n\n  function handleDeletePlaceSubmit(event) { //onSubmit\n    event.preventDefault()\n    api.deleteCard(deleteCardId)\n    .then (() => {\n      setUserCards (userCards.filter (userCards => {\n        return userCards._id !== deleteCardId //карточку оставляем если не равны\n      }))\n      closeAllPopups()\n    })\n    .catch((error) => {console.log(`Ошибка: ${error}`)})\n  }\n\n  function handleUpdateUser (dataUser, reset) {\n    api.setUserInfo(dataUser)\n      .then(res => {\n        setCurrentUser(res)\n        closeAllPopups()\n        reset()\n      })\n      .catch((error) => {console.log(`Ошибка: ${error}`)})\n  }\n\n  function handleUpdateAvatar(dataUser, reset) {\n    api.setUserAvatar(dataUser)\n      .then (res => {\n        setCurrentUser(res)\n        closeAllPopups()\n        reset()\n      })\n      .catch((error) => {console.log(`Ошибка: ${error}`)})\n  }\n\n  function handleAddPlaceSubmit(dataCards, reset) {\n    api.addCard(dataCards)\n      .then ((res) => {\n        setUserCards([res, ...userCards])\n        closeAllPopups()\n        reset()\n      })\n      .catch((error) => {console.log(`Ошибка: ${error}`)})\n  }\n\n  return (\n\n    <CurrentUserContext.Provider value={currentUser}>\n\n      <div className=\"page__container\">\n\n        <SendContext.Provider>\n          <Routes>\n            <Route>\n              \n            </Route>\n          </Routes>\n\n        </SendContext.Provider>\n        \n        \n        <Header />\n\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onTrashButton={handleDeletePlaceClick}\n          onImageCard={handleImageCard}\n          cards={userCards}\n          onCardLike={handleCardLike}\n        />\n\n        <Footer />\n\n        <EditProfilePopup                            //popup for data profile editing\n          open={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          open={isAddPlacePopupOpen }\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          open={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <PopupWithForm                               //popup for a place card deleting\n          name=\"popup_type_delete\"\n          title=\"Вы уверены?\"\n          formButton=\"Да\"\n          open={isDeletePlacePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleDeletePlaceSubmit}\n        />\n\n        <ImagePopup                                  //popup for a full size image by click\n          name=\"popup_type_image\"\n          open={selectedCard}\n          card={isImageCardChoose}\n          onClose={closeAllPopups}\n        />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}