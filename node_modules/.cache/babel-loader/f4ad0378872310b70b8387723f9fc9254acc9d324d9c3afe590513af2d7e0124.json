{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nfunction useFormValidation() {\n  _s();\n  const [values, setValues] = useState({});\n  const [errors, setError] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [isInputValid, setIsInputValid] = useState({});\n  function handleChange(event) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validationMessage = evt.target.validationMessage;\n    const valid = evt.target.validity.valid;\n    const form = evt.target.form; //воспринимает как 2 разных инпута = 2 разные форма - откладываю\n\n    setValues(oldValues => {\n      return {\n        ...oldValues,\n        [name]: value\n      };\n    });\n    setError(oldErrors => {\n      return {\n        ...oldErrors,\n        [name]: validationMessage\n      };\n    });\n    setIsValid(form.checkValidity());\n    setIsInputValid(oldIsInputValid => {\n      return {\n        ...oldIsInputValid,\n        [name]: valid\n      };\n    });\n  }\n  function reset() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setValues(data);\n    setError({});\n    setIsValid(false);\n    setIsInputValid({});\n  }\n  const setValue = useCallback((name, value) => {\n    setValues(oldValues => {\n      return {\n        ...oldValues,\n        [name]: value\n      };\n    });\n  }, []);\n  return {\n    values,\n    errors,\n    isValid,\n    isInputValid,\n    handleChange,\n    reset,\n    setValue\n  };\n}\n_s(useFormValidation, \"+wLEipJql/ipX+GTxyCVXQ8xFRs=\");\nexport default useFormValidation;","map":{"version":3,"names":["useCallback","useState","useFormValidation","_s","values","setValues","errors","setError","isValid","setIsValid","isInputValid","setIsInputValid","handleChange","event","name","evt","target","value","validationMessage","valid","validity","form","oldValues","oldErrors","checkValidity","oldIsInputValid","reset","data","arguments","length","undefined","setValue"],"sources":["/Users/elizavetaburlakova/Desktop/dev/react-mesto-auth1/src/utils/useFormValidation.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nfunction useFormValidation () {\n    const [values, setValues] = useState({})\n    const [errors, setError] = useState ({})\n    const [isValid, setIsValid] = useState(false)\n    const [isInputValid, setIsInputValid] = useState({})\n\n    \n\n    function handleChange (event) {\n        const name = evt.target.name\n        const value = evt.target.value\n        const validationMessage = evt.target.validationMessage\n        const valid = evt.target.validity.valid\n        const form = evt.target.form  //воспринимает как 2 разных инпута = 2 разные форма - откладываю\n\n        setValues((oldValues) => {\n            return { ...oldValues, [name]: value}\n        })\n\n        setError((oldErrors) => {\n            return { ...oldErrors, [name]: validationMessage}\n        })\n\n        setIsValid(form.checkValidity())\n\n        setIsInputValid((oldIsInputValid) => {\n            return { ...oldIsInputValid, [name]: valid}\n        })\n\n    }\n\n function reset (data = {}) {\n    setValues (data)\n    setError ({})\n    setIsValid (false)\n    setIsInputValid ({})\n }\n\n const setValue = useCallback ((name, value) => {\n    setValues((oldValues) => {\n        return { ...oldValues, [name]: value}\n    })\n }, [])\n\n    return { values, errors, isValid, isInputValid, handleChange, reset, setValue }\n\n}\n\nexport default useFormValidation"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,iBAAiBA,CAAA,EAAI;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACK,MAAM,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAIpD,SAASW,YAAYA,CAAEC,KAAK,EAAE;IAC1B,MAAMC,IAAI,GAAGC,GAAG,CAACC,MAAM,CAACF,IAAI;IAC5B,MAAMG,KAAK,GAAGF,GAAG,CAACC,MAAM,CAACC,KAAK;IAC9B,MAAMC,iBAAiB,GAAGH,GAAG,CAACC,MAAM,CAACE,iBAAiB;IACtD,MAAMC,KAAK,GAAGJ,GAAG,CAACC,MAAM,CAACI,QAAQ,CAACD,KAAK;IACvC,MAAME,IAAI,GAAGN,GAAG,CAACC,MAAM,CAACK,IAAI,EAAE;;IAE9BhB,SAAS,CAAEiB,SAAS,IAAK;MACrB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACR,IAAI,GAAGG;MAAK,CAAC;IACzC,CAAC,CAAC;IAEFV,QAAQ,CAAEgB,SAAS,IAAK;MACpB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACT,IAAI,GAAGI;MAAiB,CAAC;IACrD,CAAC,CAAC;IAEFT,UAAU,CAACY,IAAI,CAACG,aAAa,CAAC,CAAC,CAAC;IAEhCb,eAAe,CAAEc,eAAe,IAAK;MACjC,OAAO;QAAE,GAAGA,eAAe;QAAE,CAACX,IAAI,GAAGK;MAAK,CAAC;IAC/C,CAAC,CAAC;EAEN;EAEH,SAASO,KAAKA,CAAA,EAAa;IAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACtBvB,SAAS,CAAEsB,IAAI,CAAC;IAChBpB,QAAQ,CAAE,CAAC,CAAC,CAAC;IACbE,UAAU,CAAE,KAAK,CAAC;IAClBE,eAAe,CAAE,CAAC,CAAC,CAAC;EACvB;EAEA,MAAMoB,QAAQ,GAAG/B,WAAW,CAAE,CAACc,IAAI,EAAEG,KAAK,KAAK;IAC5CZ,SAAS,CAAEiB,SAAS,IAAK;MACrB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACR,IAAI,GAAGG;MAAK,CAAC;IACzC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEH,OAAO;IAAEb,MAAM;IAAEE,MAAM;IAAEE,OAAO;IAAEE,YAAY;IAAEE,YAAY;IAAEc,KAAK;IAAEK;EAAS,CAAC;AAEnF;AAAC5B,EAAA,CA9CQD,iBAAiB;AAgD1B,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}